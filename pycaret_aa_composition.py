# -*- coding: utf-8 -*-
"""pycaret_aa_composition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wy6pub04_bsXsZEt106xZGXQq3Tp7NWY
"""

!pip install pycaret
#import the dataset from pycaret repository
from pycaret.datasets import get_data
juice = get_data('juice')
#juice

#import classification module
from pycaret.classification import *

#intialize the setup
exp_clf = setup(juice, target = 'Purchase')

import pandas
data=pandas.read_csv("extractAAC_negative_1isto1_with_pos.csv")
from pycaret.classification import *

#intialize the setup
exp_clf = setup(data, target = 'class')

compare_models()

dt = create_model('rbfsvm')

tuned_dt = tune_model('rbfsvm')
print(tuned_dt)

plot_model(tuned_dt, plot = 'auc')
import matplotlib.pyplot as plt
plt.savefig('aa_1.png')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import pickle


cell_df=pd.read_csv('extractAAC_negative_1isto1_with_pos.csv')
#cell_df.head()
#cell_df.shape
#expansin_df=cell_df[cell_df['class']==0]
#non_expansin_df=cell_df[cell_df['class']==1[0:120]]
#expansin_df.plot(kind='scatter', x='A', y='R', color='red', label='Expansin', ax=axes)
#cell_df.dtypes
cell_df.columns
feature_df=cell_df[['A', 'R', 'N', 'D', 'C', 'Q', 'E', 'G', 'H', 'I', 'L', 'K', 'M', 'F','P', 'S', 'T', 'W', 'Y', 'V']]
x=np.asarray(feature_df)
y=np.asarray(cell_df['class'])
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test=train_test_split(x,y, test_size=0.2, random_state=0)
print(type(x_train))
#y_test.shape=51
#x_train.shape=(201,20)
#x_test.shape=51,20
from sklearn import svm
classifier=svm.SVC(C=10, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)

classifier.fit(x_train,y_train)
#print(classifier)
y_predict=classifier.predict(x_test)

from sklearn.metrics import classification_report
print(classification_report(y_test, y_predict))
from sklearn.metrics import confusion_matrix
#print("Confusion matrix: \n",confusion_matrix(y_test, y_predict))
from sklearn.metrics import accuracy_score
print("Accuracy:",accuracy_score(y_test, y_predict))
from sklearn.metrics import roc_curve
from sklearn.metrics import roc_auc_score
#mod_ROC=roc_auc_score(y_test,classifier.predict(x_test))
#fpr,tpr, _ =roc_curve(y_train, y_test)
#probs=classifier.predict_proba(x_test)

!pip install pycaret2.0
#import the dataset from pycaret repository
from pycaret.datasets import get_data
juice = get_data('juice')
#juice

#import classification module
from pycaret.classification import *

#intialize the setup
exp_clf = setup(juice, target = 'Purchase')

